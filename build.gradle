plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id "org.sonarqube" version "4.2.1.3168"
    id 'com.google.protobuf' version '0.8.17'
    id 'application'
    id 'jacoco'
}

group 'org.ansys'
version '0.0.1'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

jacoco{
    toolVersion =  "0.8.7"
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-graphql'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'com.graphql-java:graphql-java-extended-scalars:2023-01-24T02-11-56-babda5f'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    implementation 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    testImplementation 'org.springframework.graphql:spring-graphql-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation 'io.projectreactor:reactor-test'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jar {
    manifest {
        attributes 'Main-Class': 'com.springgraphql.application.Application'
    }
}

bootJar {
    launchScript{
        enabled = true
    }
    archiveFileName = "application.${archiveExtension.get()}"
}

tasks.named("bootBuildImage") {
    imageName = 'application:latest'
}
